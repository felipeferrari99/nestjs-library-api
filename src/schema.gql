# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Rents {
  id: ID!
  date_for_return: String!
  date_returned: String!
  status: String!
  book_id: Float!
  user_id: Float!
  date_rented: String!
  user: Users!
  book: Books!
}

type Users {
  id: ID!
  username: String!
  email: String!
  password: String!
  type: String!
  image: String!
  description: String!
  favorite_book: Float!
  comments: [Comments!]!
  rents: [Rents!]!
  book: Books!
}

type Comments {
  id: ID!
  body: String!
  rating: Float!
  book_id: Float!
  user_id: Float!
  user: Users!
  books: Books!
}

type Books {
  id: ID!
  title: String!
  release_date: String!
  image: String!
  qty_available: Float!
  author_id: Float!
  description: String!
  favorite: [Books!]!
  comments: [Comments!]!
  rents: [Rents!]!
  author: Authors!
}

type Authors {
  id: ID!
  name: String!
  image: String!
  description: String!
  books: [Books!]!
}

type AuthorType {
  id: ID!
  name: String!
  image: String!
  description: String
  books: [BookType!]
}

type CommentType {
  id: ID!
  body: String!
  rating: Float!
  book_id: Float!
  user_id: Float!
  user: UserType!
  books: BookType!
}

type BookType {
  id: ID!
  title: String!
  release_date: String!
  image: String!
  qty_available: Float!
  author_id: Float!
  description: String
  comments: [CommentType!]
  author: AuthorType!
}

type CreateUserResponse {
  user: Users!
  token: String!
}

type UserType {
  id: ID!
  username: String!
  email: String!
  password: String!
  type: String!
  image: String!
  description: String
  favorite_book: Float
  book: BookType
}

type RentType {
  id: ID!
  date_for_return: String!
  date_returned: String
  status: String!
  book_id: Float!
  user_id: Float!
  date_rented: DateTime!
  user: UserType!
  book: BookType!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Query {
  showUser(id: Float!): UserType!
  listAuthors(search: String!): [AuthorType!]!
  showAuthor(id: Float!): AuthorType!
  listBooks(search: String!): [BookType!]!
  showBook(id: Float!): BookType!
  listMyRents(userId: Float!): [RentType!]!
  listAllRents: [RentType!]!
  listAvailable: [BookType!]!
}

type Mutation {
  createUser(data: CreateUserInput!): CreateUserResponse!
  login(data: UserLoginInput!): CreateUserResponse!
  updatePartialUser(data: UpdateUserInput!, id: Float!): UserType!
  updateFavorite(id: Float!, user_id: Float!): UserType!
  uploadFileUser(id: Float!): UserType!
  createAuthor(data: CreateAuthorInput!): AuthorType!
  updatePartialAuthor(data: UpdateAuthorInput!, id: Float!): AuthorType!
  uploadFileAuthor(id: Float!): AuthorType!
  deleteAuthor(id: Float!): Boolean!
  createBook(data: CreateBookInput!): BookType!
  updatePartialBook(data: UpdateBookInput!, id: Float!): BookType!
  uploadFileBook(id: Float!): BookType!
  deleteBook(id: Float!): Boolean!
  createComment(data: CreateCommentInput!): CommentType!
  deleteComment(id: Float!, commentId: Float!): CommentType!
  createRent(data: CreateRentInput!): RentType!
  returnBook(id: Float!): RentType!
}

input CreateUserInput {
  username: String!
  email: String!
  password: String!
  image: String
  description: String
}

input UserLoginInput {
  username: String!
  password: String!
}

input UpdateUserInput {
  email: String
  password: String
  image: String
  description: String
}

input CreateAuthorInput {
  name: String!
  image: String
  description: String
}

input UpdateAuthorInput {
  name: String
  image: String
  description: String
}

input CreateBookInput {
  title: String!
  release_date: String!
  image: String
  qty_available: Float!
  authorName: String!
  author_id: Float
  description: String
}

input UpdateBookInput {
  title: String
  release_date: String
  image: String
  authorName: String
  qty_available: Float
  author_id: Float
  description: String
}

input CreateCommentInput {
  body: String!
  rating: Float!
  book_id: Float!
  user_id: Float!
}

input CreateRentInput {
  book_id: Float!
  user_id: Float!
  date_rented: String!
  date_for_return: String!
  date_returned: String
}